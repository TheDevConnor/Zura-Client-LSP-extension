{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Zura",
  "scopeName": "source.zu",
  "patterns": [
    { "include": "#comments" },
    { "include": "#strings" },
    { "include": "#numbers" },
    { "include": "#operations" },
    { "include": "#reserved-words" },
    { "include": "#builtin-types" },
    { "include": "#ctr-statements" },
    { "include": "#builtin-macros" },
    { "include": "#function-declarations" },
    { "include": "#variables" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.number-sign.zura",
          "match": "#.*$"
        },
        {
          "name": "comment.block.zura",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.zura",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            { "name": "constant.character.escape.zura", "match": "\\\\." }
          ]
        },
        {
          "name": "string.quoted.single.zura",
          "begin": "'",
          "end": "'",
          "patterns": [
            { "name": "constant.character.escape.zura", "match": "\\\\." }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.zura",
          "match": "\\b\\d+(\\.\\d+)?([eE][+-]?\\d+)?\\b"
        }
      ]
    },
    "operations": {
      "patterns": [
        {
          "name": "keyword.operator.math.zura",
          "match": "[+\\-*/%]"
        },
        {
          "name": "keyword.operator.comparison.zura",
          "match": "==|!=|<=|>=|<|>"
        },
        {
          "name": "keyword.operator.logical.zura",
          "match": "\\b(!|&&|\\|\\|)\\b"
        },
        {
          "name": "keyword.operator.assignment.zura",
          "match": ":=|=",
          "captures": {
            "0": { "name": "punctuation.definition.assignment.zura" }
          }
        },
        {
          "name": "punctuation.separator.zura",
          "match": "[(){}\\[\\],;]"
        }
      ]
    },
    "builtin-types": {
      "patterns": [
        {
          "name": "storage.type.builtin.zura",
          "match": "\\b(int|float|bool|str|char|void)\\b"
        }
      ]
    },
    "ctr-statements": {
      "patterns": [
        {
          "name": "keyword.control.conditional.zura",
          "match": "\\b(if|else|match|case|default)\\b"
        },
        {
          "name": "keyword.control.loop.zura",
          "match": "\\b(loop|break|continue)\\b"
        },
        {
          "name": "keyword.control.flow.zura",
          "match": "\\b(return|import)\\b"
        }
      ]
    },
    "reserved-words": {
      "patterns": [
        {
          "name": "keyword.declaration.zura",
          "match": "\\b(const|fn|have|auto|struct|enum|typename|template|pub|priv|true|false|nil)\\b"
        },
        {
          "name": "storage.modifier.zura",
          "match": "\\b(const|pub|priv)\\b"
        }
      ]
    },
    "builtin-macros": {
      "patterns": [
        {
          "name": "support.function.builtin.zura",
          "match": "@\\w+"
        }
      ]
    },
    "function-declarations": {
      "patterns": [
        {
          "name": "entity.name.function.zura",
          "match": "\\bfn\\s+([A-Za-z_][A-Za-z0-9_]*)",
          "captures": {
            "1": {
              "name": "entity.name.function.zura"
            }
          }
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.other.zura",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    }
  }
}
